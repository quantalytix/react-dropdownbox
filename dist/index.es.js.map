{"version":3,"file":"index.es.js","sources":["../src/dropdown/ReactDropdownHelper.js","../src/dropdown/ReactDropdownFilter.js","../src/dropdown/ReactDropdownContext.js","../src/dropdown/SearchBox.jsx","../src/dropdown/DropdownItem.jsx","../src/dropdown/ResultsContainer.jsx","../src/dropdown/ReactDropdown.jsx"],"sourcesContent":["\n  export const flattenData = (arr1) => {\n    // flatten object array to include items and identify group objects in \n    // a single dimension array\n    let reducer = (acc, val) => {\n      if (Array.isArray(val.children)) {\n        return acc.concat(\n          { \n            node: val.node, \n            isGroup: true, \n            key: val.key, \n            value: val.value,\n            text: val.text\n          }, \n          flattenData(val.children)\n        )\n      } else {\n        return acc.concat(\n          { \n            node: val.node, \n            key: val.key, \n            value: val ,\n            text: val.text\n          }\n        )\n      }\n    }\n    return arr1.reduce(reducer, [])\n  }\n\n\n  export const createInternalNodeArray = (arr1, count = 0) => {\n    let internalNodeArray = []\n    arr1.forEach(itemObj => {\n      let item = createItemNode(count, itemObj)\n      count += 1\n      if (Array.isArray(itemObj.children)) {\n        let result = createInternalNodeArray(itemObj.children, count)\n        item.children = result.array\n        count = result.count\n      }\n      internalNodeArray.push(item)\n    })\n    return { array: internalNodeArray, count: count };\n  }\n\n  const createItemNode = (id, item) => {\n    return { node: id, children: null, text: item.text, value: item.value, key: item.key };\n  };","\n  //both list and search are arrays for parameters\n  const filterList = (list, search) => {\n    let results = [];\n    for (let i = 0; i < list.length; i++) {\n      if (list[i].children) {\n        let objCopy = Object.assign({}, list[i]);        \n        objCopy.children = filterList(list[i].children, search);\n        if (objCopy.children.length > 0) results.push(objCopy);\n      }\n      else {\n        for (let n = 0; n < search.length; n++) {\n          if (search[n] !== '') {\n            let regExp = buildRegEx(search[n]);\n            if (checkIfMatch(list[i], regExp)) {\n              // need to check if results are already in the list\n              if (!checkDuplicate(list[i], results)) {\n                results.push(list[i]);\n              }\n            }\n          }\n        }\n      }\n    }\n    return results;\n  }\n\n  const checkIfMatch = (item, regExp) => {\n    return item.text.match(regExp);\n  }\n\n  const buildRegEx = (str) => {\n    let sanitized = str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n    return new RegExp('^' + sanitized + '', \"gmi\");\n  }\n\n  const checkDuplicate = (item, list) => {\n    for (let i = 0; i < list.length; i++) {\n      if (list[i] === item) return true;\n    }\n    return false;\n  }\n  \nexport { filterList };","import React from 'react';\nconst ReactDropdownContext = React.createContext();\nexport default ReactDropdownContext;","import React, { useContext, useRef } from 'react';\nimport ReactDropdownContext from './ReactDropdownContext';\n\nexport default function SearchBox({placeholder, initialValue, theme, icon, ...otherProps}) {\n  const input = useRef()\n  const context = useContext(ReactDropdownContext)\n\n  const handleChange = (e) => {\n    if (otherProps.onChange)\n      otherProps.onChange(e);\n  }\n\n  const handleOnFocus = async (e) => {\n    await context.dispatch({type: 'hideResult'})\n    focusTextInput();\n    if (otherProps.onFocus)\n      otherProps.onFocus(e);\n  }\n\n  const focusTextInput = (e) => {\n    input.current.focus()\n    input.current.select()\n  }\n\n    return (\n      <div className='search-box' style={theme}>\n        <div className={context.showResult ? 'result-div show' : 'result-div'} tabIndex=\"0\" onFocus={handleOnFocus} style={{width: `calc(${theme.width} - 20px)`}}>\n          <span>{context.textInput || initialValue}</span>\n        </div>\n        <input className={context.showResult ? 'input-box' : 'input-box show'} ref={input} placeholder={placeholder} onChange={handleChange} tabIndex=\"0\"/>\n        <div className=\"dropdown-icon\" tabIndex=\"-1\">\n          { icon ? <div className={icon}></div> \n          : \n            <div className='arrows'>\n              <i className='arrow-down2'></i>\n            </div>\n          }\n        </div>\n      </div>\n    );\n  }\n\n","import React, {useContext} from 'react'\nimport ReactDropdownContext from './ReactDropdownContext';\n\nexport default function DropdownItem({item}) {\n  const {activeIndex, handleOnMouseOver, handleOnSelected} = useContext(ReactDropdownContext)\n    return (\n      <div\n        id={item.node}\n        item={item}\n        onClick={() => handleOnSelected(item)}\n        onMouseOver={() => handleOnMouseOver(item)}\n        className={activeIndex === item.node ? 'dropdown-item selected' : 'dropdown-item'}\n        >\n        <div>\n          {item.text}\n        </div>\n      </div>\n    )\n}\n\n","import React, {useContext} from 'react'\nimport ReactDropdownContext from './ReactDropdownContext';\nimport DropdownItem from './DropdownItem'\n\nexport default function ResultsContainer() {\n  const {dropdownVisible, internalData} = useContext(ReactDropdownContext)\n\n\n  const renderGroup = (item, children) => {\n    return (\n      <div key={item.node}>\n        <div className=\"dropdown-heading\">{item.text.toUpperCase()}</div>\n        <div className=\"indent\">\n          {children}\n        </div>\n      </div>\n    )\n  }\n\n  const renderDropdown = (list = internalData) => {\n    return list.map((item, key) => {\n      if (item.children && item.children.length) {\n        return renderGroup(item, renderDropdown(item.children));\n      }\n      else {\n        return <DropdownItem key={item.node} item={item}/>;\n      }\n    })\n  }\n\n  return (\n    <div className={dropdownVisible ? \"results-container show\" : 'results-container' } tabIndex=\"0\">\n      {renderDropdown()}\n    </div>\n  )\n}","import React, {useState, useReducer, useEffect, useRef} from 'react'\nimport { createInternalNodeArray, flattenData } from './ReactDropdownHelper';\nimport { filterList } from './ReactDropdownFilter';\nimport SearchBox from './SearchBox'\nimport ResultsContainer from './ResultsContainer'\nimport PropTypes from 'prop-types';\nimport ReactDropdownContext from './ReactDropdownContext';\n\nimport './react-dropdown.scss';\n\nconst initialState = {\n  dropdownVisible: false,\n  textInput: '',\n  selectedIndex: null,\n  selectedKey: null,\n  activeIndex: 0,\n  itemStack: [],\n  count: [],\n  internalData: [],\n  showResult: true,\n}\n\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'showDropdown':\n      return {...state, dropdownVisible: true}\n    case 'hideDropdown':\n      return {...state, dropdownVisible: false}\n    case 'showResult':\n      return {...state, showResult: true}\n    case 'hideResult':\n      return {...state, showResult: false}\n    default:\n      return state\n  }\n}\n\nexport default function ReactDropdown ({data, selectGroupings, onSelect, filter, className, ...otherProps}) {\n  const [textInput, setTextInput] = useState(initialState.textInput)\n  const [selectedIndex, setSelectedIndex] = useState(initialState.selectedIndex)\n  const [selectedKey, setSelectedKey] = useState(initialState.selectedKey)\n  const [activeIndex, setActiveIndex] = useState(initialState.activeIndex)\n  const [itemStack, setItemStack] = useState(initialState.itemStack)\n  const [count, setCount] = useState(initialState.count)\n  const [internalData, setInternalData] = useState(initialState.internalData)\n  const [{dropdownVisible, showResult}, dispatch] = useReducer(reducer, initialState)\n  const ddRef = useRef()\n\n  useEffect(() => {\n    document.addEventListener('click', handleDocumentClick, false);\n    if (data && data.length !== 0) {\n      let result = createInternalNodeArray(data)\n      let internalData = result.array;\n      let count = result.count;\n      let selectables = flattenData(internalData);\n      setItemStack(selectables)\n      setCount(count)\n      setInternalData(internalData)\n    }\n    return () => document.removeEventListener('click', handleDocumentClick, false);\n  }, [data])\n\n  const handleDocumentClick = (e) => {\n    if (!ddRef.current.contains(e.target)) {\n      dispatch({type: 'showResult'})\n      dispatch({type: 'hideDropdown'})\n      resetSelection();\n    }\n  }\n\n  const getActiveItemRef = (index) => {\n    return ddRef.current.getElementsByClassName('dropdown-item')[index];\n  }\n\n  const setSelectedValue = (index) => {\n    let itemData = itemStack[index]\n    if (itemData) {\n      setActiveIndex(index)\n      setSelectedIndex(index)\n      setSelectedKey(itemData.key)\n      setTextInput(itemData.value.value)\n    }\n  }\n\n  const setActiveItem = (index, item, updateText = true) => {\n    setActiveIndex(index)\n    setTextInput(item.text)\n  }\n\n  const setNullState = () => {\n    setTextInput(initialState.textInput)\n    setActiveIndex(initialState.activeIndex)\n  }\n\n  const scrollIntoViewItem = (refItem) => {\n    if (refItem) {\n      refItem.scrollIntoView({ block: 'end', behavior: 'smooth' })\n    }\n  }\n\n  const resetSelection = () => {\n    if (selectedIndex) {\n      setNullState()\n    }\n    else {\n      setSelectedValue(selectedIndex);\n    }\n  }\n\n  // need to circle back and see why this actually works lol\n  // the current recurssion shouldn't allow this to work correctly\n  // when scrolling items into view... \n  const moveActiveIndex = (currentIndex, i, e) => {\n    let index = currentIndex + i;\n    let item = itemStack[index];\n    if (item) {\n      if (item.isGroup && selectGroupings === false) {\n        if (index < count && index > 0) {\n          moveActiveIndex(index, i, e);\n          let currentRef = getActiveItemRef(currentIndex);\n          scrollIntoViewItem(currentRef);\n          setActiveIndex(index);\n        }\n      } else {\n        let newItemRef = getActiveItemRef(index)\n        if (newItemRef) {\n          let item = itemStack[index];\n          setActiveItem(index, item);\n          scrollIntoViewItem(newItemRef);\n        } else {\n          let currentRef = getActiveItemRef(currentIndex)\n          scrollIntoViewItem(currentRef);\n          setActiveIndex(index);\n        }\n      }\n    }\n  }\n\n  const handleOnKeyDown = (e) => {\n    // check if dropdown is open; if not open and bail\n    if (!dropdownVisible) {\n      dispatch({type: 'showDropdown'})\n      return;\n    }\n    //escape\n    if (e.keyCode === 27) {\n      resetSelection();\n      dispatch({type: 'hideDropdown'})\n    }\n    //enter\n    if (e.keyCode === 13) {\n      let item = itemStack[activeIndex];\n      onSelect(item)\n      setSelectedValue(activeIndex);\n      dispatch({type: 'showResult'})\n      dispatch({type: 'hideDropdown'})\n    }\n    //tab\n    if (e.keyCode === 9) {\n      setSelectedValue(activeIndex);\n      dispatch({type: 'hideDropdown'})\n    }\n    //up\n    if (e.keyCode === 38 && activeIndex > 0) {\n      dispatch({type: 'showDropdown'})\n      moveActiveIndex(activeIndex, -1, e);\n    }\n    //down\n    else if (e.keyCode === 40 && activeIndex < count - 1) {\n      dispatch({type: 'showDropdown'})\n      moveActiveIndex(activeIndex, 1, e);\n    }\n  }\n\n  const handleOnTextChange = (e) => {\n    let textValue = e.target.value;\n    let searchWords = textValue.split(' ');\n\n    let result = [];\n    let count = 0;\n\n    if (textValue === '') {\n      let nodeArray = createInternalNodeArray(data);\n      result = nodeArray.array;\n      count = nodeArray.count;\n    }\n    else {\n      let filtered = filter(data, searchWords);\n      let nodes = createInternalNodeArray(filtered);\n      result = nodes.array;\n      count = nodes.count;\n    }\n\n    let selectables = flattenData(result);\n\n    setTextInput(textValue)\n    setActiveIndex(0)\n    setItemStack(selectables)\n    setCount(count)\n    setInternalData(result)\n  }\n\n  const handleOnFocus = (e) => {\n    dispatch({type: 'showDropdown'})\n  }\n\n  const handleOnSelected = (e) => {\n    onSelect(e)\n    setSelectedValue(e.node);\n    dispatch({type: 'showResult'})\n    dispatch({type: 'hideDropdown'})\n  }\n\n  const handleOnMouseOver = (item) => {\n    setActiveIndex(item.node);\n  }\n\n  const state = {\n    dropdownVisible,\n    textInput,\n    selectedIndex,\n    selectedKey,\n    activeIndex,\n    itemStack,\n    count,\n    internalData,\n    showResult,\n    handleDocumentClick,\n    handleOnFocus,\n    handleOnKeyDown,\n    handleOnMouseOver,\n    handleOnSelected,\n    handleOnTextChange,\n    dispatch\n  }\n\n  return (\n    <ReactDropdownContext.Provider value={state}>\n      <div \n        ref={node => ddRef.current = node} \n        className={className ? `react-dropdown ${className}` : \"react-dropdown\"} \n        onFocus={handleOnFocus} \n        onChange={handleOnTextChange} \n        onKeyDown={handleOnKeyDown} >\n        <SearchBox {...otherProps} />\n        <ResultsContainer />\n      </div>\n    </ReactDropdownContext.Provider>\n  )\n}\n\nReactDropdown.defaultProps = {\n  filter: filterList,\n  theme: {\n    height: '30px',\n    fontSize: 'inherit',\n  },\n  selectGroupings: false,\n}\n\nReactDropdown.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.shape({\n    key: PropTypes.number.isRequired,\n    text: PropTypes.string.isRequired,\n    value: PropTypes.any.isRequired,\n    children: PropTypes.arrayOf(PropTypes.object)\n  })).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  initialValue: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  theme: PropTypes.object,\n  filter: PropTypes.func,\n  selectGroupings: PropTypes.bool\n}"],"names":["flattenData","arr1","reducer","acc","val","Array","isArray","children","concat","node","key","value","text","reduce","createInternalNodeArray","count","internalNodeArray","forEach","item","createItemNode","itemObj","result","array","push","id","filterList","list","search","results","i","length","objCopy","Object","assign","n","regExp","buildRegEx","checkIfMatch","checkDuplicate","match","str","sanitized","replace","RegExp","ReactDropdownContext","React","createContext","SearchBox","placeholder","initialValue","theme","icon","otherProps","input","useRef","context","useContext","handleChange","e","onChange","handleOnFocus","dispatch","type","onFocus","focusTextInput","current","focus","select","showResult","width","textInput","DropdownItem","activeIndex","handleOnMouseOver","handleOnSelected","ResultsContainer","dropdownVisible","internalData","renderGroup","toUpperCase","renderDropdown","map","initialState","state","action","ReactDropdown","data","selectGroupings","onSelect","filter","className","useState","setTextInput","selectedIndex","setSelectedIndex","selectedKey","setSelectedKey","setActiveIndex","itemStack","setItemStack","setCount","setInternalData","useReducer","ddRef","addEventListener","handleDocumentClick","selectables","document","removeEventListener","contains","target","getActiveItemRef","index","getElementsByClassName","setSelectedValue","itemData","setActiveItem","setNullState","scrollIntoViewItem","refItem","scrollIntoView","block","behavior","resetSelection","moveActiveIndex","currentIndex","isGroup","currentRef","newItemRef","handleOnKeyDown","keyCode","handleOnTextChange","textValue","searchWords","split","nodeArray","filtered","nodes","defaultProps","propTypes","PropTypes","arrayOf","shape","number","isRequired","string","any","object","func","bool"],"mappings":"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"}